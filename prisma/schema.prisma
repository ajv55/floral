// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Order {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  buyerName         String?
  buyerEmail        String?
  buyerPhone        String?
  cupcakes          Cupcake[]
  floralArrangements FloralArrangement[]
  totalAmount       Float
  createdAt         DateTime           @default(now())
}


model Cupcake {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  price     Float?
  quantity  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @db.ObjectId
}

model FloralArrangement {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  price     Float?
  quantity  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @db.ObjectId
}

model CupcakesList {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  cupcakesList String?
}

model FloralList {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  floralList String?
}

model Pastries {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  pastriesList String?
  }
